C51 COMPILER V9.54   DISPLAY                                                               03/27/2019 14:16:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN .\Objects\display.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE HARDWAER\display.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\FWLib;.\HARDWAER;.\
                    -USER) DEBUG OBJECTEXTEND PRINT(.\Listings\display.lst) OBJECT(.\Objects\display.obj)

line level    source

   1          #include "display.h"
   2          
   3          u8 code seg_ment[] ={0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,0x80, 0x90};
   4          u8 seg_buff[] = {0xff, 0xff,0xff, 0xff,0xff, 0xff,0xff, 0xff};
   5          
   6          /*
   7          函数名称：show_number(u8 mode, u16 dat)
   8          参数： void
   9          返回值： void
  10          说明：更新seg_buff[]
  11          作者：王慧云
  12          时间：2019.3.26
  13          */
  14          void led_scan(void)
  15          {
  16   1              static u8 index = 0;
  17   1              P2 = (P2 & 0X1F) | 0XE0;
  18   1              P0 = 0XFF;
  19   1              P2 = (P2 & 0X1F);
  20   1              
  21   1              P2 = (P2 & 0X1F) | 0XC0;
  22   1              P0 = 0X80 >> index;
  23   1              P2 = (P2 & 0X1F);
  24   1              
  25   1              P2 = (P2 & 0X1F) | 0XE0;
  26   1              P0 = seg_buff[index] ;
  27   1              P2 = (P2 & 0X1F);
  28   1              
  29   1              if(index < 7)
  30   1              {
  31   2                      index ++;
  32   2              }
  33   1              else
  34   1                      index = 0;
  35   1      }
  36          
  37          /*
  38          函数名称：show_number(u8 mode, u16 dat)
  39          参数： u8 mode, u16 dat
  40          返回值： void
  41          说明：  mode是显示模式选择0为显示频率， 1为显示电压,2为关
  42                          dat为显示的数据
  43          作者：王慧云
  44          时间：2019.3.26
  45          */
  46          void show_number(u8 mode, u16 dat)
  47          {
  48   1              u8 unit,dec,hundred,kilo, i;
  49   1              u8 buff[4];
  50   1              if(0 == mode)
  51   1              {
  52   2                      for(i = 0; i < 4; i ++)
  53   2                      {
  54   3                              buff[i] = dat % 10;
C51 COMPILER V9.54   DISPLAY                                                               03/27/2019 14:16:50 PAGE 2   

  55   3                              dat = dat /10;          
  56   3                      }
  57   2                      for(i = 3; i >= 0; i --)
  58   2                      {
  59   3                              if(buff[i] == 0xff)
  60   3                              {
  61   4                                      buff[i] = 0xff;
  62   4                              }
  63   3                              else
  64   3                              {
  65   4                                      break;
  66   4                              }
  67   3                      }
  68   2      
  69   2                      seg_buff[7] = 0x8E;     
  70   2                      seg_buff[0] = seg_ment[buff[0]];
  71   2                      seg_buff[1] = seg_ment[buff[1]];
  72   2                      seg_buff[2] = seg_ment[buff[2]];
  73   2                      seg_buff[3] = seg_ment[buff[3]];
  74   2              }
  75   1              if(1 == mode)
  76   1              {
  77   2                      unit = dat % 10;
  78   2                      dec = dat / 10 % 10;
  79   2                      hundred = dat / 100 % 10;
  80   2                      kilo = dat / 1000;
  81   2      
  82   2                      seg_buff[7] = 0xC1;     
  83   2                      seg_buff[0] = seg_ment[unit];
  84   2                      seg_buff[1] = seg_ment[dec];
  85   2                      seg_buff[2] = seg_ment[hundred] & 0x7f;
  86   2                      seg_buff[3] = 0xff;
  87   2              }
  88   1              if(2 == mode)
  89   1              {
  90   2                      seg_buff[7] = 0xff;     
  91   2                      seg_buff[0] = 0xff;
  92   2                      seg_buff[1] = 0xff;
  93   2                      seg_buff[2] = 0xff;
  94   2                      seg_buff[3] = 0xff;
  95   2              }
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
