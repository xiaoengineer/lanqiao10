C51 COMPILER V9.54   MAIN                                                                  03/27/2019 15:52:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE USER\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\FWLib;.\HARDWAER;.\USER) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "display.h"
   3          #include "key.h"
   4          #include "pcf8951.h"
   5          
   6          /*定义LED端口*/
   7          sbit LED1 = P0^0;
   8          sbit LED2 = P0^1;
   9          sbit LED3 = P0^2;
  10          sbit LED4 = P0^3;
  11          
  12          void close(void);
  13          void Timer1Init(void);          //2毫秒@11.0592MHz
  14          void Timer0Init();    //NE555计数
  15          unsigned int frequency; //NE55的值
  16          unsigned int ne555_i; //NE555计数周期
  17          void led_show(u16 voltage, u16 frequenc, u8 chose); //LED显示函数
  18          
  19          void main(void)
  20          {
  21   1              u8 s7_tmp_flag = 0xe0; 
  22   1              u8 s6_tmp_flag = 0xd0;
  23   1              u8 s5_tmp_flag = 0xc1;
  24   1              u8 s4_tmp_flag = 0xb0; //各个按键临时存放变量
  25   1              float vol; //电压值
  26   1              u8 vol_out; //输出电压值
  27   1              close(); //关闭外设
  28   1              Timer0Init(); //定时器0初始化，用来ne555计数
  29   1              Timer1Init(); //定时器1初始化，用来扫描
  30   1              while(1)
  31   1              {               
  32   2                      vol_out = get_ADCVluce();//获取电压值
  33   2                      vol = vol_out / 51.2 * 100;//处理电压值
  34   2                      
  35   2                      /********按键键值检测*******/
  36   2                      /*******开始*******/
  37   2                      if(0xe1 == key_drive())
  38   2                      {
  39   3                              s7_tmp_flag = 0xe1;
  40   3                      }
  41   2                      if(0xe0 == key_drive())
  42   2                      {
  43   3                              s7_tmp_flag = 0xe0;     
  44   3                      }
  45   2                      if(0xd1 == key_drive())
  46   2                      {
  47   3                              s6_tmp_flag = 0xd1;
  48   3                      }
  49   2                      if(0xd0 == key_drive())
  50   2                      {
  51   3                              s6_tmp_flag = 0xd0;     
  52   3                      }               
  53   2                      if(0xc1 == key_drive())
  54   2                      {
C51 COMPILER V9.54   MAIN                                                                  03/27/2019 15:52:20 PAGE 2   

  55   3                              s5_tmp_flag = 0xc1;
  56   3                      }
  57   2                      if(0xc0 == key_drive())
  58   2                      {
  59   3                              s5_tmp_flag = 0xc0;     
  60   3                      }
  61   2                      if(0xb1 == key_drive())
  62   2                      {
  63   3                              s4_tmp_flag = 0xb1;
  64   3                      }
  65   2                      if(0xb0 == key_drive())
  66   2                      {
  67   3                              s4_tmp_flag = 0xb0;     
  68   3                      }
  69   2                      /********结束********/
  70   2                      
  71   2                      if(0xe0 == s7_tmp_flag) //当s7按下的时候（或者初始化）
  72   2                      {
  73   3                              if(0xb1 == s4_tmp_flag) //如果s4按下
  74   3                              {
  75   4                                      show_number(0, frequency); //显示频率
  76   4                              }
  77   3                              if(0xb0 == s4_tmp_flag) //如果s4按下（或者初始化）
  78   3                              {
  79   4                                      if(0xc1 == s5_tmp_flag) //同步输出dac
  80   4                                      {
  81   5                                              show_number(1, vol); //显示电压
  82   5                                              ADC_OUT(vol_out); //输出电压
  83   5                                      }
  84   4                                      if(0xc0 == s5_tmp_flag) //定值输出
  85   4                                      {
  86   5                                              show_number(1, 200);
  87   5                                              ADC_OUT(102);
  88   5                                      }
  89   4                              }
  90   3                      }
  91   2                      if(0xe1 == s7_tmp_flag) //当s7按下的时候
  92   2                      {
  93   3                                      show_number(2, 000); //关闭显示器
  94   3                      }
  95   2                      if(0xd0 == s6_tmp_flag) //当s6按下的时候（或者初始化）
  96   2                      {
  97   3                              led_show(vol, frequency, s4_tmp_flag); //led显示
  98   3                      }
  99   2                      if(0xd1 == s6_tmp_flag) //当s6按下的时候
 100   2                      {
 101   3                              led_show(vol, frequency, 0); //LED关闭
 102   3                      }
 103   2                      
 104   2              }
 105   1      }
 106          
 107          /*
 108          函数名称：close(void)
 109          参数： void
 110          返回值： void
 111          说明：关闭外设，LED，蜂鸣器，继电器
 112          作者：王慧云
 113          时间：2019.3.26
 114          */
 115          void close(void)
 116          {
C51 COMPILER V9.54   MAIN                                                                  03/27/2019 15:52:20 PAGE 3   

 117   1              P2 = (P2 & 0X1F) | 0XA0;
 118   1              P0 = 0XAF;
 119   1              P2 = P2 & 0X1F;
 120   1              
 121   1              P2 = (P2 & 0X1F) | 0X90;
 122   1              P0 = 0XFF;
 123   1              P2 = P2 & 0X1F;
 124   1      }
 125          
 126          void Timer1Init(void)           //2毫秒@11.0592MHz
 127          {
 128   1              AUXR &= 0xBF;           //定时器时钟12T模式
 129   1              TMOD &= 0x0F;           //设置定时器模式
 130   1              TMOD |= 0x10;           //设置定时器模式
 131   1              TL1 = 0xCD;             //设置定时初值
 132   1              TH1 = 0xF8;             //设置定时初值
 133   1              EA = 1;
 134   1              ET1 = 1;
 135   1              TF1 = 0;                //清除TF1标志
 136   1              TR1 = 1;                //定时器1开始计时
 137   1      }
 138          
 139          /*
 140          函数名称：led_show(u16 voltage, u16 frequenc, u8 chose)
 141          参数： u16 voltage, u16 frequenc, u8 chose
 142          返回值： void
 143          说明：u16 voltage：被比较的电压
 144                   u16 frequenc：被比较的频率
 145                    u8 chose：选择显示模式
 146          作者：王慧云
 147          时间：2019.3.26
 148          */
 149          void led_show(u16 voltage, u16 frequenc, u8 chose)
 150          {
 151   1              P2 = (P2 & 0X1F) | 0X90;
 152   1              P0 = 0xff;
 153   1              if(0 == chose)
 154   1              {
 155   2                      LED1 = 1;
 156   2                      LED2 = 1;
 157   2                      LED3 = 1;
 158   2                      LED4 = 1;
 159   2              }
 160   1              else
 161   1              {
 162   2                      if(voltage <= 150)
 163   2                      {
 164   3                              LED3 = 1;
 165   3                      }
 166   2                      if((voltage >= 150) && (voltage < 250))
 167   2                      {
 168   3                              LED3 = 0;
 169   3                      }
 170   2                      if((voltage >= 250) && (voltage < 350))
 171   2                      {
 172   3                              LED3 = 1;
 173   3                      }
 174   2                      if(voltage >= 350)
 175   2                      {
 176   3                              LED3 = 0;
 177   3                      }
 178   2                      
C51 COMPILER V9.54   MAIN                                                                  03/27/2019 15:52:20 PAGE 4   

 179   2                      if(frequenc <= 500)
 180   2                      {
 181   3                              LED4 = 1;
 182   3                      }
 183   2                      if((frequenc >= 1500) && (frequenc < 2500))
 184   2                      {
 185   3                              LED4 = 0;
 186   3                      }
 187   2                      if((frequenc >= 2500) && (frequenc < 3500))
 188   2                      {
 189   3                              LED4 = 1;
 190   3                      }
 191   2                      if(frequenc >= 3500)
 192   2                      {
 193   3                              LED4 = 0;
 194   3                      }       
 195   2      
 196   2                      if(0xb0 == chose)
 197   2                      {
 198   3                              LED1 = 0;
 199   3                              LED2 = 1;
 200   3                      }
 201   2                      if(0xb1 == chose)
 202   2                      {
 203   3                              LED1 = 1;
 204   3                              LED2 = 0;
 205   3                      }
 206   2              }
 207   1              P2 = (P2 & 0X1F);
 208   1      }
 209          
 210          void Timer0Init()               
 211          {
 212   1              TMOD|=0x04;  //设为计数模式
 213   1              TL0=0;          
 214   1              TH0=0;          
 215   1              TF0=0;          
 216   1              TR0=0;          
 217   1      }
 218          
 219          void Timer1_IRQ() interrupt 3
 220          {
 221   1              ne555_i ++;
 222   1              TL1 = 0xCD;             //设置定时初值
 223   1              TH1 = 0xF8;             //设置定时初值
 224   1              led_scan();
 225   1              key_scan();
 226   1              
 227   1              if(ne555_i >= 450)
 228   1              {
 229   2                      ne555_i=0;
 230   2                      TR0=0;
 231   2                      frequency = TH0*256+TL0;
 232   2                      TH0=0;
 233   2                      TL0=0;
 234   2                      TR0=1;
 235   2              }
 236   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    626    ----
C51 COMPILER V9.54   MAIN                                                                  03/27/2019 15:52:20 PAGE 5   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
